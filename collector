#!/usr/bin/env php5
<?php

define('ROOT_DIR', dirname($_SERVER['PHP_SELF']));

$lines = file('/opt/minecraft/server.log');
$total_lines = count($lines);

echo 'Processing server.log file with ' . $total_lines . ' lines' . PHP_EOL;

if( !is_file(ROOT_DIR . '/last-count') )
{
	file_put_contents(ROOT_DIR . '/last-count', $total_lines . '|' . $lines[0]);
	$line_count = $total_lines;
	$first_line = $lines[0];
}
else
{
	list($line_count, $first_line) = explode('|', file_get_contents(ROOT_DIR . '/last-count'));
}

$start = ($first_line != $lines[0]) ? 0 : $line_count;

echo 'Starting at line ' . $start . ' since I\'m smart enough to work efficiently.' . PHP_EOL;

// As much as I love the foreach loop, for is a better play here.
for( $i = $start; $i < $total_lines; $i++ )
{
	// Isolate just this line.
	$line = $lines[$i];
	
	// Extrapolate, or whatever, the various data points from the line
	list($date, $time, $level, $data) = explode(' ', $line, 4);
	$time = strtotime($date . ' ' . $time);
	$level = str_replace(array('[',']'), '', $level);
	
	// Determine what to do based on the level thrown
	switch( $level )
	{
		case 'WARNING':
			echo "Danger! at $time: $data";
		break;
		case 'INFO':
			echo "No big deal at $time: $data";
		break;
		case 'ERROR':
			echo "Uh-oh $time: $data";
		break;
		default:
			echo "WHAT IS ($level)?";
		break;
	}
}

// Probably should update the the starting point in last_count here
